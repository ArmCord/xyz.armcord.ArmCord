#!/usr/bin/env bash

# Set FEATURES to what goes after --enable-features; for example, UseSkiaRenderer,WebRTCPipeWireCapturer,etc,etc will then get turned into --enable-features=UseSkiaRenderer,WebRTCPipeWireCapturer,etc,etc.
FEATURES="UseSkiaRenderer"
TMPDIR="$XDG_RUNTIME_DIR/app/${FLATPAK_ID:-xyz.armcord.ArmCord}"
FLAGS="--enable-gpu-rasterization --enable-zero-copy --enable-gpu-compositing --enable-native-gpu-memory-buffers --enable-oop-rasterization"


if [ "${XDG_SESSION_TYPE,,}" = "wayland" ]; then

    # Just your normal NVIDIA things
    if [ -c /dev/nvidia0 ]; then
        echo "Using NVIDIA on Wayland, applying workaround"
        FLAGS="$FLAGS --disable-gpu-sandbox"
    fi

    # Use PipeWire for screencapture if on Wayland
    echo "Using Wayland; enabling PipeWire for video capture"
    FEATURES="$FEATURES,WebRTCPipeWireCapturer"

    # Electron and Wayland don't mix very well, so hide the backend behind USE_WAYLAND=1
    if [[ ${USE_WAYLAND} -eq 1 ]]; then
        echo "USE_WAYLAND set, using the Wayland Electron backend"
        FEATURES="$FEATURES,UseOzonePlatform,WaylandWindowDecorations"
        FLAGS="$FLAGS --ozone-platform=wayland"
    elif [[ ${USE_WAYLAND} -ne 1 ]]; then
        echo "USE_WAYLAND not set, running through Xwayland"
    fi

fi


FLAGS="$FLAGS --enable-features=$FEATURES"
echo "Passing the following arguments to Electron: $FLAGS"
zypak-wrapper /app/bin/armcord/armcord $FLAGS "$@"
